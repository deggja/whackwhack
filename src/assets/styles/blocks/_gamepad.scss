.gamepad {
  display: flex;
  justify-content: center;
  width: 100%;
  perspective: 62rem;
  overflow: visible;
  transition: ease 1s transform;

  &__surface {
    position: relative;
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(5, 1fr);
    grid-gap: $spacing--base;
    background-color: $color__dark;
    margin: 0 0 3rem; // Accounting for 3D depth
    width: 70rem;
    height: 75vh;
    max-width: 80%;
    max-height: 60rem;
    min-width: 30rem;
    min-height: 30rem;
    border-radius: 2rem;
    list-style: none;
    transform-origin: top center;
    transform-style: preserve-3d;
    backface-visibility: hidden;
    transform: rotateX(15deg);
    padding: $spacing--base;
    z-index: 1;
    border: solid 0.5rem $color__focus;
    box-shadow: rgba($color__focus, 0.3) 0 0 2rem 1rem;

    // Add some "shadow"
    &::after {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: darken($color__secondary, 40);
      border: solid 0.5rem $color__secondary;
      box-shadow: rgba($color__secondary, 0.3) 0 0 2rem 1rem;
      content: "";
      transform-origin: 100% 50%;
      transform: translateZ(-2rem) translateY(2.5rem);
      z-index: 2;
      border-radius: inherit;
    }
  }
  &__slab {
    display: flex;
    margin: 0;
    padding: 0;
    z-index: 4;
    backface-visibility: hidden;
  }
  &__button {
    appearance: none;
    position: relative;
    border-radius: 1rem;
    border: none;
    box-shadow: none;
    background: $color__focus; // Fallback
    width: 100%;
    transition: ease 0.15s all;
    transform-origin: top center;
    transform-style: preserve-3d;
    backface-visibility: hidden;
    overflow: visible;
    box-shadow: rgba($color__focus, 0.6) 0 0 1rem 0.1rem;
    border: solid 0.5rem lighten($color__focus, 10);
    z-index: 1;

    &:hover {
      background: $color__secondary;
      border-color: $color__light;
      transition: ease 0.05s all;
      z-index: 10;
      box-shadow: rgba($color__light, 0.5) 0 0 2rem 0.25rem;

    }
    &:active {
      z-index: 0;
      transform: translateZ(0.5rem) translateY(0.5rem);
      background: $color__secondary;
      box-shadow: rgba($color__secondary, 0.75) 0 0 2rem 1rem;
      border-color: $color__light;
    }
    &:focus {
      outline: none;
    }

    &--active {
      background: $color__light;
      transform: translateZ(2rem) translateY(-0.5rem);
      z-index: 10;
      box-shadow: rgba($color__focus, 0.75) 0 0 2rem 1rem,
                  rgba($color__dark, 1) 0 1rem 2rem;
    }
    &--moled {
      background: $color__light;
      transform: translateZ(2rem) translateY(-0.5rem);
      z-index: 10;
      box-shadow: rgba($color__focus, 0.75) 0 0 2rem 1rem,
                  rgba($color__dark, 1) 0 1rem 2rem;
      animation: fade-to-red 4s 9s ease both;
      &::after {
        position: absolute;
        content: "";
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: radial-gradient($color__red, rgba($color__red, 0.5) 70%);
        animation: fade-in-and-blink 12s 3s ease both;
        border-radius: 0.5rem;
      }

      &:hover {
        background: lighten($color__green, 20);
      }
      &:active {
        background: $color__green;
        border-color: darken($color__green, 10);
        box-shadow: rgba($color__green, 0.75) 0 0 2rem 0.5rem !important;
      }
    }
  }

  &--paused {
    transform: scale(0.9);
  }

  // Level timing
  &--level-1 &__button {
    // 12 sec
    animation-duration: 8s; animation-delay: 3s;
    &::after { animation-duration: 3s; animation-delay: 8s; }
  }
  &--level-2 &__button {
    // 10 sec
    animation-duration: 7s; animation-delay: 2s;
    &::after { animation-duration: 3s; animation-delay: 6s; }
  }
  &--level-3 &__button {
    // 8 sec
    animation-duration: 5.5s; animation-delay: 1.5s;
    &::after { animation-duration: 3s; animation-delay: 4.5s; }
  }
  &--level-4 &__button {
    // 6 sec
    animation-duration: 4s; animation-delay: 1s;
    &::after { animation-duration: 3s; animation-delay: 2s; }
  }

  &:active {
    transition: ease 0.15s transform;
    transform: scale(0.95);
  }

  @include from(medium) {
    &__surface {
      grid-template-columns: repeat(5, 1fr);
      grid-template-rows: repeat(4, 1fr);
      grid-gap: $spacing--l;
      padding: $spacing--l;
    }
  }
}
